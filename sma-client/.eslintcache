[{"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/index.js":"1","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/reportWebVitals.js":"2","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/App.js":"3","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/home.js":"4","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/signup.js":"5","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/login.js":"6","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/play.js":"7","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/Navbar.js":"8","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/Joke.js":"9","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/LikeButton.js":"10","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/CommentButton.js":"11","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/util/AuthRoute.js":"12","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/store.js":"13","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/uiReducer.js":"14","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/dataReducer.js":"15","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/userReducer.js":"16"},{"size":478,"mtime":1611273541860,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611270859429,"results":"19","hashOfConfig":"18"},{"size":1822,"mtime":1611535130525,"results":"20","hashOfConfig":"18"},{"size":1877,"mtime":1611451250412,"results":"21","hashOfConfig":"18"},{"size":5163,"mtime":1611535250833,"results":"22","hashOfConfig":"18"},{"size":3441,"mtime":1611451642174,"results":"23","hashOfConfig":"18"},{"size":143,"mtime":1611377021342,"results":"24","hashOfConfig":"18"},{"size":701,"mtime":1611365718720,"results":"25","hashOfConfig":"18"},{"size":2548,"mtime":1611423849071,"results":"26","hashOfConfig":"18"},{"size":688,"mtime":1611424038897,"results":"27","hashOfConfig":"18"},{"size":406,"mtime":1611422474890,"results":"28","hashOfConfig":"18"},{"size":332,"mtime":1611451357171,"results":"29","hashOfConfig":"18"},{"size":735,"mtime":1611453829288,"results":"30","hashOfConfig":"18"},{"size":0,"mtime":1611452450822,"results":"31","hashOfConfig":"18"},{"size":0,"mtime":1611452438183,"results":"32","hashOfConfig":"18"},{"size":0,"mtime":1611452456076,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"nec8cl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/index.js",[],["70","71"],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/reportWebVitals.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/App.js",["72"],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/home.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/signup.js",["73"],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/login.js",["74"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n// MUI imports\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles( theme => (\n    { textField: theme.textField\n    })\n);\n\nconst padding = 20;\n// I will be passing in a prop that contains error messages after submitting\n// maybe. Or I won't idk\n// Generally top level components like this login button won't have \n// props right. That makes sense.\nfunction Login() {\n    const [errors, setErrors] = useState({ email: '', password: ''});\n    const classes = useStyles();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    };\n\n    const handleSubmit = event => {\n        setIsLoading(true);\n        axios\n            .post('https://us-central1-social-media-6297e.cloudfunctions.net/api/login', {email, password})\n            .then( res => {\n                setIsLoading(false);\n                localStorage.setItem('FBItem', `Bearer ${res.data.tokenId}`);\n                console.log(res.data.tokenId);\n            })\n            .catch( err => {\n                setIsLoading(false);\n                setErrors({\n                    email: err.response.data.email,\n                    password: err.response.data.password\n                });\n                console.error(err.code);\n            })\n\n    };\n\n    return (\n    <Grid container>\n    <Grid item xs={12} sm={6}>\n\n    </Grid>\n    <Grid container item \n        xs={12} sm={6}\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\">\n        <div style={{minWidth: 350, maxWidth: 400}}>\n        <Grid\n            container \n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <img src=\"../components/laugh.svg\"/>\n            <div style={{ height: padding}} /> \n            <TextField \n                label=\"Email\"\n                className={classes.textField}\n                value = {email}\n                onChange = {handleEmailChange}\n                variant=\"outlined\"\n                error={errors.email ? true:false}\n                helperText={errors.email}/>\n            <TextField \n                label=\"Password\"\n                className={classes.textField}\n                value = {password}\n                onChange = {handlePasswordChange}\n                variant=\"outlined\"\n                error={errors.password ? true:false}\n                helperText={errors.password}/>\n            <Button \n                style={{\n                    width: 170,\n                    margin: 10\n                    }} \n                color = \"primary\"\n                onClick={handleSubmit}\n                disabled = {isLoading}\n                variant=\"contained\">Login</Button>\n            <Typography style={{ fontSize:12 }} component={Link} to=\"/signup\">No account? Sign Up!</Typography>\n        </Grid>\n        </div>\n    </Grid>\n    </Grid>\n\n    )\n}\n\nexport default Login\n","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/pages/play.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/Navbar.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/Joke.js",["75"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LikeButton from './LikeButton';\nimport CommentButton from './CommentButton';\n\n// MUI Themes\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 150\n    },\n    title: {\n        fontSize: 18\n    },\n    jokeCard: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    image: {\n        width: 80,\n        height: 50,\n        objectFit: 'cover'\n    }\n});\n\n// This is going to be a component that does all the styling and the nice things we \n// want associated with a joke on the home page.\n\n//props are kinda like the inputs into a function! but they\n// look more like html attributes\n\nfunction Joke(props) {\n    // currently taking in everything in a Joke doc,\n    // and it's going to need the user's like array. to figure out\n    // whether the user liked a post or not\n    const classes = useStyles();\n\n    return (\n    <Grid item sm={6}>\n    <Card>\n    <CardContent>\n    <Typography className={classes.title}> \n        <Typography component={Link} to={`user/${props.joke.handle}`}>\n            {props.joke.handle}\n        </Typography>'s Joke!\n    </Typography>\n    </CardContent>\n    <CardContent>\n        <Card className={classes.jokeCard}>\n            <CardMedia\n                className={classes.image}\n                component = \"img\"\n                alt = {props.joke.handle}\n                image = {props.joke.imageUrl}\n                />\n            <CardContent>\n                <Typography> {props.joke.body} </Typography>\n            </CardContent>\n        </Card>\n\n    </CardContent>    \n\n    <CardActions>\n        <Button \n            component = {Link}\n            to = {`joke/${props.joke.jokeId}`}\n            color=\"primary\"\n            > See More\n        </Button>\n        \n        <LikeButton \n            isLiked = {props.isLiked || false} \n            id ={props.joke.jokeId}/>\n        \n        <CommentButton />\n        <IconButton>\n            <img src = \"./laugh.svg\"/>\n        </IconButton>\n    </CardActions>\n    </Card>\n    </Grid>\n    )\n}\n\nexport default Joke;","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/LikeButton.js",["76"],"import React from 'react';\nimport axios from 'axios';\n\n// MUI Imports\nimport IconButton from '@material-ui/core/IconButton';\nimport { Favorite, RadioButtonChecked } from '@material-ui/icons';\n\nfunction LikeButton(props) {\n\n    const onLikeClick = () => {\n        /*\n        props.isLiked ? (\n            axios.post(`/like/${props.id}`)\n            .then(res => {\n                return;\n            })\n        ) : (return;);\n        */\n        return;\n    }\n\n    return (\n        <IconButton onClick = {onLikeClick}>\n            { props.isLiked || false ? <RadioButtonChecked/> \n            : ( <Favorite/>)\n            }\n        </IconButton>\n        \n    )\n};\n\nexport default LikeButton","/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/components/CommentButton.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/util/AuthRoute.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/store.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/uiReducer.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/dataReducer.js",[],"/Users/seesea/Documents/Coding-Projects/joke-with-friends/sma-client/src/redux/reducers/userReducer.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":26,"nodeType":"83","messageId":"84","endLine":15,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":85,"column":25,"nodeType":"87","endLine":85,"endColumn":62},{"ruleId":"85","severity":1,"message":"86","line":74,"column":13,"nodeType":"87","endLine":74,"endColumn":49},{"ruleId":"85","severity":1,"message":"86","line":86,"column":13,"nodeType":"87","endLine":86,"endColumn":39},{"ruleId":"81","severity":1,"message":"88","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]